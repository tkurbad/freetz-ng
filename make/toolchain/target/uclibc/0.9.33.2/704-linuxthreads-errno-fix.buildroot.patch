From af8b2d71ce37b9d4d24ddbc755cdea68de02949a Mon Sep 17 00:00:00 2001
From: Peter Korsgaard <jacmet@sunsite.dk>
Date: Mon, 5 Jul 2010 14:08:17 +0200
Subject: [PATCH] don't make __errno_location / __h_errno_location hidden

Closes #2089 (https://bugs.busybox.net/show_bug.cgi?id=2089)

__errno_location / __h_errno_location access has to go through the PLT
like malloc/free, so the linuxthread variants gets used instead when
compiling with -pthread.

Based on http://github.com/mat-c/uClibc/commit/328d392c54aa5dc2b8e7f398a419087de497de2b

This is a linuxthreads-only patch, for mips/nptl the issue has been fixed by this upstream commit: http://git.uclibc.org/uClibc/commit/?id=8b48f745be1e086d6e486bbb8167e770f3d1fbc5.

Signed-off-by: Peter Korsgaard <jacmet@sunsite.dk>
---
 include/netdb.h                               |    1 -
 libc/misc/internals/__errno_location.c        |    3 ---
 libc/misc/internals/__h_errno_location.c      |    1 -
 libc/sysdeps/linux/common/bits/errno.h        |    1 -
 6 files changed, 0 insertions(+), 11 deletions(-)

index 9d3807d..ac411ab 100644
--- include/netdb.h
+++ include/netdb.h
@@ -59,7 +59,6 @@ __BEGIN_DECLS
 
 /* Function to get address of global `h_errno' variable.  */
 extern int *__h_errno_location (void) __THROW __attribute__ ((__const__));
-libc_hidden_proto(__h_errno_location)
 
 /* Macros for accessing h_errno from inside libc.  */
 #ifdef _LIBC
index 487a9c2..0620860 100644
--- libc/misc/internals/__errno_location.c
+++ libc/misc/internals/__errno_location.c
@@ -15,6 +15,3 @@ int * weak_const_function __errno_location (void)
 {
     return &errno;
 }
-#ifdef IS_IN_libc /* not really need, only to keep in sync w/ libc_hidden_proto */
-libc_hidden_weak(__errno_location)
-#endif
index 213d398..235df4e 100644
--- libc/misc/internals/__h_errno_location.c
+++ libc/misc/internals/__h_errno_location.c
@@ -10,4 +10,3 @@ int * weak_const_function __h_errno_location (void)
 {
     return &h_errno;
 }
-libc_hidden_weak(__h_errno_location)
index 6e520fa..f4a9ebb 100644
--- libc/sysdeps/linux/common/bits/errno.h
+++ libc/sysdeps/linux/common/bits/errno.h
@@ -43,7 +43,6 @@
 # ifndef __ASSEMBLER__
 /* Function to get address of global `errno' variable.  */
 extern int *__errno_location (void) __THROW __attribute__ ((__const__));
-libc_hidden_proto(__errno_location)
 
 #  ifdef __UCLIBC_HAS_THREADS__
 /* When using threads, errno is a per-thread value.  */

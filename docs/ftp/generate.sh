#! /usr/bin/env bash
# generates docs/ftp/README.md
SCRIPT="$(readlink -f $0)"
PARENT="$(dirname $(dirname ${SCRIPT%/*}))"
ping -c1 -W1 -w1 -q ftp.avm.de 2>/dev/null && SERVER="ftp.avm.de" || SERVER="download.avm.de"


#get
LANG=C  wget --spider --recursive --no-verbose --no-parent "https://$SERVER" 2>&1 | tee ftp
sed -rn 's,.* URL: (.*\.image) 200 OK,\1,p' -i ftp

#cat
for cat in $(sed "s,^https://$SERVER/,,;s,/.*,,g" ftp | uniq); do
c="$cat"
[ "${cat#fritz}" != "$cat" ] && cat="${cat:5}" && cat="Fritz${cat^}"
[ "$cat" != "archive" ] && CATS="$CATS$c $cat\n"
done

#gen
(
echo -e '[//]: # ( Do not edit this file! Run generate.sh to create it. )'
echo -n "Content: "
echo -e "$CATS" | grep -v ^$ | while read c cat; do echo -n "[$cat](#$(echo ${cat,,} | sed 's/ /-/g')) - "; done | sed 's/...$//'
echo
echo -e "# Temporär verfügbare Firmware-Dateien auf [$SERVER/](https://$SERVER/)"
echo -e " - Das Unterverzeichnis [archive/](https://$SERVER/archive/) ist hier nicht enthalten."
echo -e " - Diese Liste ist weder vollständig, korrekt noch aktuell."
echo -e "$CATS" | grep -v ^$ | while read c cat; do
	echo -e "\n### $cat"
	sed -rn "s,^https://$SERVER/$c/,,p" ftp | while read -s line; do
		new="${line%%/*}"
		[ "$old" != "$new" ] && echo " * $new/" && old="$new"
		file="${line#$new/}" ; file="${file//\/fritz.os\//:}" ; file="${file//\/recover\//-recover:}" ; kind="${file%%:*}" ; file="${file##*:}"
		echo "   - ${kind//%20/ }: [${file//%20/ }](https://$SERVER/$c/$line)"
	done
done
) | sed 's/_-/-/' > $PARENT/docs/ftp/README.md

#tmp
rm -f ftp
rmdir $SERVER/*/*/*/*/* $SERVER/*/*/*/* $SERVER/*/*/* $SERVER/*/* $SERVER/* $SERVER/ 2>/dev/null
exit 0

